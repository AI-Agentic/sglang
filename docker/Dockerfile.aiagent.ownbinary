# This is a version of dockerfile for building image from source code

ARG CUDA_VERSION=12.4.1

FROM nvcr.io/nvidia/tritonserver:24.04-py3-min

ARG BUILD_TYPE=all
ENV DEBIAN_FRONTEND=noninteractive

RUN echo 'tzdata tzdata/Areas select America' | debconf-set-selections \
  && echo 'tzdata tzdata/Zones/America select Los_Angeles' | debconf-set-selections \
  && apt update -y \
  && apt install software-properties-common -y \
  && apt install python3.10 python3-pip -y 
RUN apt install curl git sudo libibverbs-dev -y \
  && apt install rdma-core infiniband-diags openssh-server perftest -y \
  && python3 --version \
  && python3 -m pip --version \
  && rm -rf /var/lib/apt/lists/* \
  && apt clean

# For openbmb/MiniCPM models
RUN pip3 install datamodel_code_generator

WORKDIR /sgl-workspace

ARG CUDA_VERSION
RUN python3 -m pip install --upgrade pip setuptools wheel html5lib six \
  # && git clone --depth=1 -b tile_pruning https://github.com/AI-Agentic/sglang.git \
  && if [ "$CUDA_VERSION" = "12.1.1" ]; then \
  export CUINDEX=121; \
  elif [ "$CUDA_VERSION" = "12.4.1" ]; then \
  export CUINDEX=124; \
  elif [ "$CUDA_VERSION" = "12.8.1" ]; then \
  export CUINDEX=124; \
  elif [ "$CUDA_VERSION" = "11.8.0" ]; then \
  export CUINDEX=118; \
  python3 -m pip install --no-cache-dir sgl-kernel -i https://docs.sglang.ai/whl/cu118; \
  else \
  echo "Unsupported CUDA version: $CUDA_VERSION" && exit 1; \
  fi \
  && python3 -m pip uninstall -y torch || true \
  && python3 -m pip install --no-cache-dir torch==2.6.0 --index-url https://download.pytorch.org/whl/cu${CUINDEX}
# && cd sglang \

COPY requirements.txt .
RUN python3 -m pip install --no-cache-dir -r requirements.txt --find-links https://flashinfer.ai/whl/cu${CUINDEX}/torch2.6/flashinfer-python
COPY sglang-0.4.6.post5-cp310-cp310-linux_x86_64.whl .
RUN python3 -m pip --no-cache-dir install sglang-0.4.6.post5-cp310-cp310-linux_x86_64.whl --find-links https://flashinfer.ai/whl/cu${CUINDEX}/torch2.6/flashinfer-python \
  && if [ "$CUDA_VERSION" = "12.8.1" ]; then \
  python3 -m pip install nvidia-nccl-cu12==2.26.2.post1 --force-reinstall --no-deps; \
  fi \
  && python3 -m pip install vllm orjson --no-deps \
  && python3 -m pip install sglang-router --no-deps \
  && python3 -m pip install sgl-kernel --force-reinstall --no-deps

COPY clean_sources.py .
RUN python3 clean_sources.py "$(python3 -c "import os, sglang; print(os.path.dirname(sglang.__file__))")"

RUN rm -rf requirements.txt sglang-0.4.6.post5-cp310-cp310-linux_x86_64.whl clean_sources.py

# COPY sglang_router-0.1.4-cp310-cp310-linux_x86_64.whl .
# RUN python3 -m pip install sglang_router-0.1.4-cp310-cp310-linux_x86_64.whl

ENV DEBIAN_FRONTEND=interactive
